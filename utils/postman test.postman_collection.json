{
	"info": {
		"_postman_id": "f9b783b5-d985-4976-956d-24ca99d85c00",
		"name": "postman test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "company",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"response path and success\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/company\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"response path and success\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/company\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"company_name\": \"saeed\",\r\n    \"value\": \"54654654\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"id\": \"625c531e7ca412b4e8ef56b4\",\r\n    \"company_name\": \"saeed\",\r\n    \"value\": \"1111111111\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"response path, success and result\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/company\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"  pm.expect(responseJson.result).to.include(\"Company deleted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"625c57dff11d4e658f7c89e3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "employee",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"response path and success\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/company\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/employee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"response path and success\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/employee\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"saeed\",\r\n    \"last_name\": \"gh\",\r\n    \"username\": \"saeed555\",\r\n    \"password\": \"321321\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/employee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"id\": \"625c5678f11d4e658f7c89cf\",\r\n    \"first_name\": \"ssssssssss\",\r\n    \"last_name\": \"gh\",\r\n    \"username\": \"saeed555\",\r\n    \"password\": \"321321\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/employee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"response path, success and result\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/company\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"  pm.expect(responseJson.result).to.include(\"Company deleted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"625c56a1f11d4e658f7c89d5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/employee",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"employee"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "task",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"response path and success\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/company\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"pm.test(\"response path and success\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/task\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"saeed\",\r\n    \"description\": \"54654654\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"id\": \"625c56e4f11d4e658f7c89db\",\r\n    \"title\": \"saeed\",\r\n    \"description\": \"1111111111111\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"response path, success and result\", () => {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.expect(responseJson.path).to.eql(\"/company\");\r",
									"  pm.expect(responseJson.success).to.true;\r",
									"  pm.expect(responseJson.result).to.include(\"Company deleted\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"625c56e4f11d4e658f7c89db\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/task",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"task"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}